package com.dataStructure;

/**
 * @Author: leaderHoo
 * @Date: 2019/12/26 16:27
 */
public class Hash {
}

//1. 顺序查找：O(N), 二分查找 ： O(logN)
// 二分查找 要求数据有序，并且不会经常变动（静态查找）
//N很大时，并且经常插入删除时，二叉搜索树查找O(h) h是二叉搜索树高度，最好O(logN)、最坏O(N)

//2. 其他适应性广，而且速度快的查询方法 ？
//情景1 ：在十几亿QQ号中，查找一个QQ号，
//分析：如果用二分查找 十几亿QQ号，可能需要1G的存储，目前可以满足，但是频繁插入无法满足

//情景2 ： 查字典，比如查询zoo, 我们可以大约直接翻到，
//我们就是先估算 关键字的大体位置


class HashSearch{
    //散列查找：广泛应用于数据库的信息搜索，拥有很强的效率
    //基本思想： 以关键字作为自变量，通过一个确定的函数h得到一个函数值，作为这个变量的实际存储地址
//    即：存储位置 = hash(key)
//    因此，散列法， 又被称作关键字-地址转换法 ，
//    散列法中使用的函数，被称作散列函数（哈希函数）
}